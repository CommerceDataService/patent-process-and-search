<?xml version="1.0" encoding="UTF-8" ?>

<schema name="patent-similarity" version="1.6">

   <field name="_version_" type="long" indexed="true" stored="true"/>
   <field name="_root_" type="string" indexed="true" stored="false"/>

   <field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false" />
   <field name="application_id" type="string" indexed="true" stored="true" multiValued="false" />
   <field name="family_ids" type="string" indexed="true" stored="true" multiValued="true" />

   <field name="citation_examiner" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="citation_applicant" type="string" indexed="true" stored="true" multiValued="true"/>
   <field name="citation_npl" type="string" indexed="true" stored="true" multiValued="true"/>

   <field name="produced_date" type="date" indexed="true" stored="true" multiValued="false"/>
   <field name="published_date" type="date" indexed="true" stored="true" multiValued="false"/>

   <field name="title_text" type="text_stem" indexed="true" stored="true" multiValued="true"/>
   <field name="abstract_text" type="text_stem" indexed="true" stored="true" multiValued="true" termVectors="true" termPositions="true" termOffsets="true"/>
   <field name="claim_text" type="text_stem" indexed="true" stored="true" multiValued="true" termVectors="true"/>
   <field name="citation_title_text" type="text_stem" indexed="true" stored="true" multiValued="true" termVectors="true"/>
   <field name="desc_summary_text" type="text_stem" indexed="true" stored="true" multiValued="true" termVectors="true"/>
   <field name="desc_draw_text" type="text_stem" indexed="true" stored="true" multiValued="true" termVectors="true"/>
   <field name="desc_detail_text" type="text_stem" indexed="true" stored="true" multiValued="true" termVectors="true"/>

   <field name="measurement" type="string" indexed="true" stored="true" multiValued="true" termVectors="true" omitPositions="true"/>
   <field name="entity_all" type="string" indexed="true" stored="true" multiValued="true" termVectors="true" omitPositions="true"/>

   <field name="uspc_classification" type="string" indexed="true" stored="true" multiValued="true" termVectors="true" omitPositions="true"/>
   <field name="cpc_classification" type="string" indexed="true" stored="true" multiValued="true" termVectors="true" omitPositions="true"/>

   <!-- Fields below are not stored. -->
   <field name="acronym" type="acronym_path" indexed="true" stored="false" multiValued="true" termVectors="true" omitPositions="true"/>
   <field name="trademark" type="acronym_path" indexed="true" stored="false" multiValued="true" termVectors="true" omitPositions="true"/>
   <field name="desc_all" type="text_stem" indexed="true" stored="false" multiValued="true" termVectors="true"/>
   <field name="text_all" type="text_stem" indexed="true" stored="false" multiValued="true" termVectors="true"/>
   <dynamicField name="*_id" type="string" indexed="true" stored="false" multiValued="false" omitPositions="true"/>
   <dynamicField name="*_ids" type="string" indexed="true" stored="false" multiValued="true" omitPositions="true"/>
   <dynamicField name="*_classification" type="string" indexed="true" stored="true" multiValued="true" omitPositions="true"/>
   <dynamicField name="*_date" type="date" indexed="true" stored="false" multiValued="false" omitPositions="true"/>
   <dynamicField name="*_text" type="text_stem" indexed="true" stored="false" multiValued="true" termVectors="true"/>
   <dynamicField name="*_ngram" type="text_grams" indexed="true" stored="false" multiValued="true" termVectors="true"/>
   <dynamicField name="*_noun" type="text_noun" indexed="true" stored="false" multiValued="true" termVectors="true" omitPositions="true"/>
   <dynamicField name="*_nounphrase" type="noun_phrase_type" indexed="true" stored="false" multiValued="true" termVectors="true" omitPositions="true"/>
   <dynamicField name="*_entity" type="string" indexed="true" stored="false" multiValued="true" termVectors="true" omitPositions="true"/>

   <uniqueKey>id</uniqueKey>

   <copyField source="*_id" dest="all_ids"/>
   <copyField source="*_ids" dest="all_ids"/>

   <copyField source="desc_summary_text" dest="desc_all"/>
   <copyField source="desc_drawing_text" dest="desc_all"/>
   <copyField source="desc_detail_text" dest="desc_all"/>

   <copyField source="*_text" dest="text_all"/>
   <copyField source="*_text" dest="all_ngram"/>

   <copyField source="*_noun" dest="all_noun"/>
   <copyField source="*_nounphrase" dest="all_nounphrase"/>

   <copyField source="acronym" dest="entity_all"/>
   <copyField source="trademark" dest="entity_all"/>
   <copyField source="*_entity" dest="entity_all"/>

   <fieldType name="string" class="solr.StrField" sortMissingLast="true" />
   <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
   <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>

    <!-- A text type for English text where stopwords and synonyms are managed using the REST API -->
    <fieldType name="managed_en" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.ManagedStopFilterFactory" managed="english" />
        <filter class="solr.ManagedSynonymFilterFactory" managed="english" />
      </analyzer>
    </fieldType>

    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-FoldToASCII.txt"/>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="([^A-Za-z- ])" replacement=" "/>
        <tokenizer class="solr.WhiteSpaceTokenizerFactory"/>
        <filter class="solr.LengthFilterFactory" min="3" max="120"/>
        <filter class="solr.StopFilterFactory" words="stopwords.txt"  ignoreCase="true"/>
        <filter class="solr.WordDelimiterFilterFactory"
            generateWordParts="1" catenateWords="1" generateNumberParts="1" catenateNumbers="1" splitOnNumerics="0" catenateAll="0" splitOnCaseChange="0" stemEnglishPossessive="0" preserveOriginal="1" />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.SynonymFilterFactory" synonyms="en_uk_us_spellings.txt" ignoreCase="true" expand="false"/>
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-FoldToASCII.txt"/>
        <tokenizer class="solr.WhiteSpaceTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.SynonymFilterFactory" synonyms="en_uk_us_spellings.txt" ignoreCase="true" expand="false"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
      </analyzer>
    </fieldType>

     <fieldType name="text_stem" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <charFilter class="solr.HTMLStripCharFilterFactory" />
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-FoldToASCII.txt"/>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="([^A-Za-z- ])" replacement=" "/>
        <tokenizer class="solr.WhiteSpaceTokenizerFactory"/>
        <filter class="solr.LengthFilterFactory" min="3" max="120"/>
        <filter class="solr.StopFilterFactory" words="stopwords.txt"  ignoreCase="true"/>
        <filter class="solr.WordDelimiterFilterFactory"
            generateWordParts="1" catenateWords="1" generateNumberParts="0" catenateNumbers="0" splitOnNumerics="0" catenateAll="0" splitOnCaseChange="0" stemEnglishPossessive="0" preserveOriginal="1" />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="en_uk_us_spellings.txt" ignoreCase="true" expand="false"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-FoldToASCII.txt"/>
        <tokenizer class="solr.WhiteSpaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory"
            generateWordParts="1" catenateWords="1" generateNumberParts="0" catenateNumbers="1" splitOnNumerics="0" catenateAll="0" splitOnCaseChange="0" stemEnglishPossessive="0" preserveOriginal="1" />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="en_uk_us_spellings.txt" ignoreCase="true" expand="false"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="text_grams" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <charFilter class="solr.HTMLStripCharFilterFactory" />
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-FoldToASCII.txt"/>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="([^A-Za-z- ])" replacement=" "/>
        <tokenizer class="solr.WhiteSpaceTokenizerFactory"/>
        <filter class="solr.LengthFilterFactory" min="3" max="100"/>
        <filter class="solr.StopFilterFactory" words="stopwords.txt"  ignoreCase="true"/>
        <filter class="solr.WordDelimiterFilterFactory"
            generateWordParts="0" catenateWords="1" generateNumberParts="0" catenateNumbers="1" splitOnNumerics="0" catenateAll="0" splitOnCaseChange="0" stemEnglishPossessive="0" preserveOriginal="0" />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.StopFilterFactory" words="stopwords.txt"/>
        <filter class="solr.SynonymFilterFactory" synonyms="en_uk_us_spellings.txt" ignoreCase="true" expand="false"/>
        <filter class="solr.PorterStemFilterFactory"/>
        <filter class="solr.ShingleFilterFactory" minShingleSize="2" maxShingleSize="4" outputUnigrams="false" outputUnigramsIfNoShingles="false"/>

        <!-- Discard any sequence which had a previous stopword. -->
        <filter class="solr.PatternReplaceFilterFactory" pattern=".*_.*" replacement=""/>
        <filter class="solr.LengthFilterFactory" min="5" max="150"/>

        <!-- Discard additional sequences. -->
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords_ngram.txt"/>

        <!--
        <filter class="solr.EdgeNGramFilterFactory" minGramSize="4" maxGramSize="15" side="front"/>
        <filter class="solr.TrimFilterFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords_ngram.txt"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
        -->
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-FoldToASCII.txt"/>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="([^A-Za-z- ])" replacement=" "/>

        <filter class="solr.StopFilterFactory" words="stopwords.txt"  ignoreCase="true"/>
        <filter class="solr.WordDelimiterFilterFactory"
            generateWordParts="0" catenateWords="1" generateNumberParts="0" catenateNumbers="1" splitOnNumerics="0" catenateAll="0" splitOnCaseChange="0" stemEnglishPossessive="0" preserveOriginal="0" />

        <tokenizer class="solr.LowerCaseTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" words="stopwords.txt"/>
        <filter class="solr.SynonymFilterFactory" synonyms="en_uk_us_spellings.txt" ignoreCase="true" expand="false"/>
        <filter class="solr.PorterStemFilterFactory"/>
        <filter class="solr.ShingleFilterFactory" minShingleSize="2" maxShingleSize="4" outputUnigrams="false" outputUnigramsIfNoShingles="false"/>

        <!-- Discard any sequence which had a stopword. -->
        <filter class="solr.PatternReplaceFilterFactory" pattern=".*_.*" replacement=""/>
        <filter class="solr.LengthFilterFactory" min="5" max="150"/>

        <!-- Discard additional sequences. -->
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords_ngram.txt"/>

      </analyzer>
    </fieldType>

    <fieldType name="lowercase" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.TrimFilterFactory"/>
        <filter class="solr.LowerCaseFilterFactory" />
      </analyzer>
    </fieldType>

     <fieldType name="text_noun" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="([()“”])" replacement=""/>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="([^A-Za-z])" replacement=" "/>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.TrimFilterFactory"/>
        <filter class="solr.LengthFilterFactory" min="3" max="100"/>
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.StopFilterFactory" words="stopwords.txt"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords_noun.txt"/>
      </analyzer>
    </fieldType>

    <fieldType name="noun_phrase_type" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="([()“”])" replacement=""/>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="([^A-Za-z.,])" replacement=" "/>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.TrimFilterFactory"/>
        <filter class="solr.LengthFilterFactory" min="4" max="120"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords_noun_phrase.txt"/>
        <filter class="solr.SynonymFilterFactory" synonyms="noun_phrase_syn.txt" ignoreCase="true" expand="false"/>
      </analyzer>
    </fieldType>

    <fieldType name="simple_acronym" class="solr.TextField">
      <analyzer>
        <charFilter class="solr.PatternReplaceCharFilterFactory" pattern="([^A-Za-z ])" replacement=""/>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.TrimFilterFactory"/>
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.LengthFilterFactory" min="3" max="100"/>
      </analyzer>
    </fieldType>

    <fieldType name="acronym_path" class="solr.TextField">
      <analyzer type="index">
        <charFilter class="solr.PatternReplaceCharFilterFactory"  pattern="acro/(.+)" replacement="$1"/>
        <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/" />
        <filter class="solr.TrimFilterFactory"/>
        <filter class="solr.LowerCaseFilterFactory" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.KeywordTokenizerFactory" />
        <filter class="solr.TrimFilterFactory"/>
        <filter class="solr.LowerCaseFilterFactory" />
      </analyzer>
    </fieldType>

    <!--
      Example of using PathHierarchyTokenizerFactory at index time, so
      queries for paths match documents at that path, or in descendent paths
    -->
    <fieldType name="descendent_path" class="solr.TextField">
      <analyzer type="index">
        <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.KeywordTokenizerFactory" />
      </analyzer>
    </fieldType>
    <!--
      Example of using PathHierarchyTokenizerFactory at query time, so
      queries for paths match documents at that path, or in ancestor paths
    -->
    <fieldType name="ancestor_path" class="solr.TextField">
      <analyzer type="index">
        <tokenizer class="solr.KeywordTokenizerFactory" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/" />
      </analyzer>
    </fieldType>

    <!-- since fields of this type are by default not stored or indexed,
         any data added to them will be ignored outright.  -->
    <fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" />

  <!-- Similarity is the scoring routine for each document vs. a query.
       A custom Similarity or SimilarityFactory may be specified here, but
       the default is fine for most applications.
       For more info: http://wiki.apache.org/solr/SchemaXml#Similarity
    -->
  <!--
     <similarity class="com.example.solr.CustomSimilarityFactory">
       <str name="paramkey">param value</str>
     </similarity>
    -->

</schema>
